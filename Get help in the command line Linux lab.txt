analyst@0798eeac1726:~$ whatis cat
cat (1)              - concatenate files and print on the standard output
analyst@0798eeac1726:~$ man cat
CAT(1)                            User Commands                           CAT(1)

NAME
       cat - concatenate files and print on the standard output

SYNOPSIS
       cat [OPTION]... [FILE]...

DESCRIPTION
       Concatenate FILE(s) to standard output.

       With no FILE, or when FILE is -, read standard input.

       -A, --show-all
              equivalent to -vET

       -b, --number-nonblank
              number nonempty output lines, overrides -n

       -e     equivalent to -vE

       -E, --show-ends
              display $ at end of each line

       -n, --number
              number all output lines

       -s, --squeeze-blank
              suppress repeated empty output lines

       -t     equivalent to -vT

       -T, --show-tabs
analyst@0798eeac1726:~$ apropos -a first part file
head (1)             - output the first part of files
analyst@0798eeac1726:~$ man useradd
USERADD(8)                 System Management Commands                 USERADD(8)

NAME
       useradd - create a new user or update default new user information

SYNOPSIS
       useradd [options] LOGIN

       useradd -D

       useradd -D [options]

DESCRIPTION
       useradd is a low level utility for adding users. On Debian,
       administrators should usually use adduser(8) instead.

       When invoked without the -D option, the useradd command creates a new
       user account using the values specified on the command line plus the
       default values from the system. Depending on command line options, the
       useradd command will update system files and may also create the new
       user's home directory and copy initial files.

       By default, a group will also be created for the new user (see -g, -N,
       -U, and USERGROUPS_ENAB).

OPTIONS
       The options which apply to the useradd command are:

       -b, --base-dir BASE_DIR
           The default base directory for the system if -d HOME_DIR is not
           specified.  BASE_DIR is concatenated with the account name to define
           the home directory. If the -m option is not used, BASE_DIR must
           exist.
--More--
Most commands optionally preceded by integer argument k.  Defaults in brackets.
Star (*) indicates argument becomes new default.
-------------------------------------------------------------------------------
<space>                 Display next k lines of text [current screen size]
z                       Display next k lines of text [current screen size]*
<return>                Display next k lines of text [1]*
d or ctrl-D             Scroll k lines [current scroll size, initially 11]*
q or Q or <interrupt>   Exit from more
s                       Skip forward k lines of text [1]
f                       Skip forward k screenfuls of text [1]
b or ctrl-B             Skip backwards k screenfuls of text [1]
'                       Go to place where previous search started
=                       Display current line number
/<regular expression>   Search for kth occurrence of regular expression [1]
n                       Search for kth occurrence of last r.e [1]
!<cmd> or :!<cmd>       Execute <cmd> in a subshell
v                       Start up /usr/bin/vi at current line
ctrl-L                  Redraw screen
:n                      Go to kth next file [1]
:p                      Go to kth previous file [1]
:f                      Display current file name and line number
.                       Repeat previous command
-------------------------------------------------------------------------------

           If this option is not specified, useradd will use the base directory
           specified by the HOME variable in /etc/default/useradd, or /home by
           default.

       -c, --comment COMMENT
           Any text string. It is generally a short description of the login,
           and is currently used as the field for the user's full name.

       -d, --home-dir HOME_DIR
           The new user will be created using HOME_DIR as the value for the
           user's login directory. The default is to append the LOGIN name to
           BASE_DIR and use that as the login directory name. The directory
           HOME_DIR does not have to exist but will not be created if it is
           missing.

       -D, --defaults
           See below, the subsection "Changing the default values".

       -e, --expiredate EXPIRE_DATE
           The date on which the user account will be disabled. The date is
           specified in the format YYYY-MM-DD.

           If not specified, useradd will use the default expiry date specified
           by the EXPIRE variable in /etc/default/useradd, or an empty string
           (no expiry) by default.

       -f, --inactive INACTIVE
           The number of days after a password expires until the account is
           permanently disabled. A value of 0 disables the account as soon as
           the password has expired, and a value of -1 disables the feature.

           If not specified, useradd will use the default inactivity period
analyst@0798eeac1726:~$ whatis useradd
useradd (8)          - create a new user or update default new user information
analyst@0798eeac1726:~$ man rm
RM(1)                             User Commands                            RM(1)

NAME
       rm - remove files or directories

SYNOPSIS
       rm [OPTION]... [FILE]...

DESCRIPTION
       This manual page documents the GNU version of rm.  rm removes each speci-
       fied file.  By default, it does not remove directories.

       If the -I or --interactive=once option is given, and there are more  than
       three  files or the -r, -R, or --recursive are given, then rm prompts the
       user for whether to proceed with the entire operation.  If  the  response
       is not affirmative, the entire command is aborted.

       Otherwise, if a file is unwritable, standard input is a terminal, and the
       -f or --force option is not given, or the -i or --interactive=always  op-
       tion  is  given,  rm prompts the user for whether to remove the file.  If
       the response is not affirmative, the file is skipped.

OPTIONS
       Remove (unlink) the FILE(s).

       -f, --force
              ignore nonexistent files and arguments, never prompt

       -i     prompt before every removal

       -I     prompt once before removing more than three files, or when  remov-
              ing  recursively;  less intrusive than -i, while still giving pro-
              tection against most mistakes
analyst@0798eeac1726:~$ man rmdir
RMDIR(1)                          User Commands                         RMDIR(1)

NAME
       rmdir - remove empty directories

SYNOPSIS
       rmdir [OPTION]... DIRECTORY...

DESCRIPTION
       Remove the DIRECTORY(ies), if they are empty.

       --ignore-fail-on-non-empty

              ignore each failure that is solely because a directory

              is non-empty

       -p, --parents
              remove DIRECTORY and its ancestors; e.g., 'rmdir -p a/b/c' is sim-
              ilar to 'rmdir a/b/c a/b a'

       -v, --verbose
              output a diagnostic for every directory processed

       --help display this help and exit

       --version
              output version information and exit

AUTHOR
       Written by David MacKenzie.

REPORTING BUGS
--More--
Most commands optionally preceded by integer argument k.  Defaults in brackets.
Star (*) indicates argument becomes new default.
-------------------------------------------------------------------------------
<space>                 Display next k lines of text [current screen size]
z                       Display next k lines of text [current screen size]*
<return>                Display next k lines of text [1]*
d or ctrl-D             Scroll k lines [current scroll size, initially 11]*
q or Q or <interrupt>   Exit from more
s                       Skip forward k lines of text [1]
f                       Skip forward k screenfuls of text [1]
b or ctrl-B             Skip backwards k screenfuls of text [1]
'                       Go to place where previous search started
=                       Display current line number
/<regular expression>   Search for kth occurrence of regular expression [1]
n                       Search for kth occurrence of last r.e [1]
!<cmd> or :!<cmd>       Execute <cmd> in a subshell
v                       Start up /usr/bin/vi at current line
ctrl-L                  Redraw screen
:n                      Go to kth next file [1]
:p                      Go to kth previous file [1]
:f                      Display current file name and line number
.                       Repeat previous command
-------------------------------------------------------------------------------
analyst@0798eeac1726:~$ whatis rm
rm (1)               - remove files or directories
analyst@0798eeac1726:~$ whatis rmdir
rmdir (1)            - remove empty directories
rmdir (2)            - delete a directory
analyst@0798eeac1726:~$ man create new group
No manual entry for create
No manual entry for new
GROUP(5)                    Linux Programmer's Manual                   GROUP(5)

NAME
       group - user group file

DESCRIPTION
       The /etc/group file is a text file that defines the groups on the system.
       There is one entry per line, with the following format:

           group_name:password:GID:user_list

       The fields are as follows:

       group_name  the name of the group.

       password    the (encrypted) group password.  If this field is  empty,  no
                   password is needed.

       GID         the numeric group ID.

       user_list   a list of the usernames that are members of this group, sepa-
                   rated by commas.

FILES
       /etc/group

BUGS
       As the  4.2BSD  initgroups(3)  man  page  says:  no  one  seems  to  keep
       /etc/group up-to-date.

SEE ALSO
       chgrp(1), gpasswd(1), groups(1), login(1), newgrp(1), sg(1), getgrent(3),
       getgrnam(3), gshadow(5), passwd(5), vigr(8)
analyst@0798eeac1726:~$ man create group
No manual entry for create
GROUP(5)                    Linux Programmer's Manual                   GROUP(5)

NAME
       group - user group file

DESCRIPTION
       The /etc/group file is a text file that defines the groups on the system.
       There is one entry per line, with the following format:

           group_name:password:GID:user_list

       The fields are as follows:

       group_name  the name of the group.

       password    the (encrypted) group password.  If this field is  empty,  no
                   password is needed.

       GID         the numeric group ID.

       user_list   a list of the usernames that are members of this group, sepa-
                   rated by commas.

FILES
       /etc/group

BUGS
       As the  4.2BSD  initgroups(3)  man  page  says:  no  one  seems  to  keep
       /etc/group up-to-date.

SEE ALSO
       chgrp(1), gpasswd(1), groups(1), login(1), newgrp(1), sg(1), getgrent(3),
       getgrnam(3), gshadow(5), passwd(5), vigr(8)
analyst@0798eeac1726:~$ apropos -a create group
fanotify_init (2)    - create and initialize fanotify group
groupadd (8)         - create a new group
setsid (2)           - creates a session and sets the process group ID
analyst@0798eeac1726:~$ ^C
analyst@0798eeac1726:~$ apropos -a first part file